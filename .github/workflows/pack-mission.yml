name: Build and Release PBO

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-pbo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            TAG=${{ github.ref_name }}
          else
            TAG=$(curl -sH "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/releases/latest" | \
              jq -r .tag_name)
          fi
          # Simplify version format (v26.0.2 -> v2602)
          SIMPLIFIED_TAG="v$(echo "$TAG" | sed 's/^v//; s/\.//g')"
          echo "simplified_version=$SIMPLIFIED_TAG" >> $GITHUB_OUTPUT
          echo "original_tag=$TAG" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Find mission folder
        id: mission-folder
        run: |
          MISSION_DIR=$(find . -maxdepth 1 -type d -name "*.*" | head -1)
          if [ -z "$MISSION_DIR" ]; then
            echo "Error: Mission folder not found. Ensure there's a directory with a dot in its name (e.g., 'mission.Altis')." >&2
            exit 1
          fi
          echo "directory=$MISSION_DIR" >> $GITHUB_OUTPUT
          FILENAME=$(basename "$MISSION_DIR" | cut -d. -f1)
          MAPNAME=$(basename "$MISSION_DIR" | cut -d. -f2)
          echo "pbo_name=${FILENAME}_${{ steps.version.outputs.simplified_version }}.${MAPNAME}" >> $GITHUB_OUTPUT

      - name: Build PBO
        run: |
          mkdir -p output
          docker run --rm -v "$(pwd):/data" jerryhopper/depbo-tools:latest \
            makepbo -N "/data/${{ steps.mission-folder.outputs.directory }}" "/data/output"

      - name: Rename PBO
        run: |
          mv "output/$(basename "${{ steps.mission-folder.outputs.directory }}").pbo" "${{ steps.mission-folder.outputs.pbo_name }}"

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.original_tag }}
          files: ${{ steps.mission-folder.outputs.pbo_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
