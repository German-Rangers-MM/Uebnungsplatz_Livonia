name: Package and Release Arma Mission

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'The tag of the release to update'
        required: true

jobs:
  package-mission:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Find mission folder
      id: find-folder
      run: |
        for dir in */; do
          dir=${dir%/}
          if [[ "$dir" =~ ^[^.]+\.[^.]+\.[^.]+$ ]]; then
            echo "Skipping folder with multiple dots: $dir"
            continue
          fi
          if [[ "$dir" =~ ^[^.]+\.[^.]+$ && ! "$dir" =~ ^\. ]]; then
            echo "Found mission folder: $dir"
            echo "mission_folder=$dir" >> $GITHUB_OUTPUT
            mission_name="${dir%.*}"
            map_name="${dir#*.}"
            echo "mission_name=$mission_name" >> $GITHUB_OUTPUT
            echo "map_name=$map_name" >> $GITHUB_OUTPUT
            exit 0
          fi
        done
        echo "No valid mission folder found"
        exit 1

    - name: Set up armake2
      run: |
        sudo add-apt-repository universe
        sudo apt-get update
        sudo apt-get install -y armake2

    - name: Process version tag
      id: process-version
      run: |
        if [[ "${{ github.event_name }}" == "release" ]]; then
          TAG="${{ github.ref_name }}"
        else
          TAG="${{ github.event.inputs.tag_name }}"
        fi
        CLEAN_VERSION=$(echo "${TAG#v}" | sed -E 's/[-+].*//')
        SIMPLIFIED_VERSION="v$(echo "$CLEAN_VERSION" | tr -d .)"
        echo "simplified_version=$SIMPLIFIED_VERSION" >> $GITHUB_OUTPUT
        echo "original_tag=$TAG" >> $GITHUB_OUTPUT
        echo "Original: $TAG, Simplified: $SIMPLIFIED_VERSION"

    - name: Build PBO
      id: build-pbo
      run: |
        MISSION_FOLDER="${{ steps.find-folder.outputs.mission_folder }}"
        OUTPUT_FILENAME="${{ steps.find-folder.outputs.mission_name }}_${{ steps.process-version.outputs.simplified_version }}.${{ steps.find-folder.outputs.map_name }}"
        armake2 build "$MISSION_FOLDER" "$OUTPUT_FILENAME"
        echo "pbo_filename=$OUTPUT_FILENAME" >> $GITHUB_OUTPUT

    - name: Upload to Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.process-version.outputs.original_tag }}
        files: ${{ steps.build-pbo.outputs.pbo_filename }}
        token: ${{ secrets.GITHUB_TOKEN }}
