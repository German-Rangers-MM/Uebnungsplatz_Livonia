name: Pack and Release Arma Mission PBO

on:
  push:
    branches:
      - main
  release:
    types: [published]
  workflow_dispatch:

jobs:
  pack-pbo:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Find mission folder
      id: find-folder
      run: |
        MISSION_FOLDER=$(find . -regextype posix-extended -regex '.*/[^/]*\.[^/]*' -type d ! -name ".github" ! -path "*/.github/*" | head -n 1)
        echo "Folder found: $MISSION_FOLDER"
        FOLDER_NAME=$(basename "$MISSION_FOLDER")
        MISSION_NAME="${FOLDER_NAME%.*}"
        MAP_NAME="${FOLDER_NAME#*.}"
        echo "mission_name=$MISSION_NAME" >> $GITHUB_OUTPUT
        echo "map_name=$MAP_NAME" >> $GITHUB_OUTPUT
        echo "folder_path=$MISSION_FOLDER" >> $GITHUB_OUTPUT

    - name: Setup Wine
      run: |
        sudo dpkg --add-architecture i386
        sudo apt update
        sudo apt install -y wine32

    - name: Install MakePbo
      run: |
        wget https://mikero.bytex.digital/api/download?filename=MakePbo.2.16.9.36.Installer.exe -O MakePbo.exe
        wine MakePbo.exe /S
        echo "$HOME/.wine/drive_c/Program Files/MakePbo" >> $GITHUB_PATH

    - name: Pack mission file
      run: |
        makepbo -N "${{ steps.find-folder.outputs.folder_path }}" packed.pbo
        mv packed.pbo "${{ steps.find-folder.outputs.mission_name }}.pbo"

    - name: Process version tag
      id: process-version
      run: |
        VERSION=$(echo "${{ github.ref_name }}" | sed 's/^v//; s/\.//g')
        echo "version=v$VERSION" >> $GITHUB_OUTPUT

    - name: Rename PBO with version
      run: |
        NEW_NAME="${{ steps.find-folder.outputs.mission_name }}_${{ steps.process-version.outputs.version }}.${{ steps.find-folder.outputs.map_name }}.pbo"
        mv "${{ steps.find-folder.outputs.mission_name }}.pbo" "$NEW_NAME"
        echo "NEW_NAME=$NEW_NAME" >> $GITHUB_ENV

    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        files: ${{ env.NEW_NAME }}
      if: github.event_name == 'release'
