name: Build and Release Arma Mission PBO

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-pbo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Add Mikero GPG key
        run: |
          wget -qO - https://mikero.bytex.digital/apt/mikero.gpg | sudo gpg --dearmor -o /usr/share/keyrings/mikero.gpg
          echo "deb [signed-by=/usr/share/keyrings/mikero.gpg] https://mikero.bytex.digital/apt/ ./" | sudo tee /etc/apt/sources.list.d/mikero.list

      - name: Install makepbo
        run: |
          sudo apt-get update
          sudo apt-get install -y makepbo

      - name: Determine version and upload URL
        id: version
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            TAG=${{ github.event.release.tag_name }}
            UPLOAD_URL=${{ github.event.release.upload_url }}
          else
            LATEST_RELEASE_JSON=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/releases/latest)
            TAG=$(echo "$LATEST_RELEASE_JSON" | jq -r '.tag_name')
            UPLOAD_URL=$(echo "$LATEST_RELEASE_JSON" | jq -r '.upload_url')
          fi
          
          # Process version tag (v1.2.3 -> v123)
          CLEAN_VERSION=$(echo "$TAG" | sed -E 's/^v//; s/[^0-9]//g')
          FORMATTED_VERSION="v${CLEAN_VERSION}"
          
          echo "version=$FORMATTED_VERSION" >> $GITHUB_OUTPUT
          echo "upload_url=$UPLOAD_URL" >> $GITHUB_OUTPUT

      - name: Locate mission folder
        id: mission-folder
        run: |
          MISSION_FOLDER=$(find . -maxdepth 1 -type d -name '*.*' | head -n 1)
          if [ -z "$MISSION_FOLDER" ]; then
            echo "::error::No mission folder found with mapname format (name.mapname)"
            exit 1
          fi
          
          FOLDER_NAME=$(basename "$MISSION_FOLDER")
          FILENAME="${FOLDER_NAME%.*}"
          MAPNAME="${FOLDER_NAME##*.}"
          
          echo "folder=$MISSION_FOLDER" >> $GITHUB_OUTPUT
          echo "filename=$FILENAME" >> $GITHUB_OUTPUT
          echo "mapname=$MAPNAME" >> $GITHUB_OUTPUT

      - name: Build PBO
        run: |
          OUTPUT_NAME="${{ steps.mission-folder.outputs.filename }}_${{ steps.version.outputs.version }}.${{ steps.mission-folder.outputs.mapname }}"
          makepbo -A -P "${{ steps.mission-folder.outputs.folder }}" "$OUTPUT_NAME"

      - name: Upload PBO to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.version.outputs.upload_url }}
          asset_path: ${{ steps.mission-folder.outputs.filename }}_${{ steps.version.outputs.version }}.${{ steps.mission-folder.outputs.mapname }}.pbo
          asset_name: ${{ steps.mission-folder.outputs.filename }}_${{ steps.version.outputs.version }}.${{ steps.mission-folder.outputs.mapname }}.pbo
          asset_content_type: application/octet-stream
