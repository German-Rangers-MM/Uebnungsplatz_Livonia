name: Package and Release Arma Mission

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build-pbo:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Find mission folder
      id: find-folder
      run: |
        MISSION_FOLDER=$(find . -maxdepth 1 -type d -name '*.*' ! -name '.github' -print -quit)
        if [ -z "$MISSION_FOLDER" ]; then
          echo "No mission folder found!"
          exit 1
        fi
        echo "folder_path=${MISSION_FOLDER#./}" >> $GITHUB_OUTPUT
        FOLDER_NAME=$(basename "$MISSION_FOLDER")
        echo "mission_name=${FOLDER_NAME%.*}" >> $GITHUB_OUTPUT
        echo "map_name=${FOLDER_NAME#*.}" >> $GITHUB_OUTPUT

    - name: Setup HEMTT
      uses: arma-actions/hemtt@v1

    - name: Get version tag
      id: version
      run: |
        if [[ $GITHUB_EVENT_NAME == "release" ]]; then
          VERSION_TAG=${GITHUB_REF#refs/tags/}
        else
          LATEST_RELEASE=$(curl -sH "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases/latest)
          VERSION_TAG=$(echo "$LATEST_RELEASE" | jq -r .tag_name)
        fi
        SIMPLIFIED_VERSION=$(echo "$VERSION_TAG" | sed -E 's/^v?([0-9]+)\.([0-9]+)\.([0-9]+).*$/\1\2\3/')
        echo "version=v$SIMPLIFIED_VERSION" >> $GITHUB_OUTPUT

    - name: Build PBO
      run: |
        cd "${{ steps.find-folder.outputs.folder_path }}"
        hemtt build --ci
        PBO_FILE=$(ls *.pbo)
        NEW_NAME="${{ steps.find-folder.outputs.mission_name}}_${{ steps.version.outputs.version }}.${{ steps.find-folder.outputs.map_name }}.pbo"
        mv "$PBO_FILE" "$NEW_NAME"
        echo "PBO_FILE=$NEW_NAME" >> $GITHUB_ENV

    - name: Upload to release
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ steps.find-folder.outputs.folder_path }}/${{ env.PBO_FILE }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
